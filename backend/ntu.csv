module_code,module_name,module_description,prerequisites,key_concepts,reviews,sentiment_rating
CZ1103,INTRODUCTION TO COMPUTATIONAL THINKING & PROGRAMMING,"Computational thinking (CT) is the process of analysing a problem then designing and expressing its solution in such a way that a computer can effectively carry it out. It includes a number of characteristics, such as breaking a problem into small and repetitive ordered steps, logically ordering and analyzing data and creating solutions that can be effectively implemented as programs running on computer. The aim of this course is hence to take students with no prior experience of thinking in a computational manner to a point where you can derive simple algorithms and code the programs to solve some basic problems in your domain of studies. Student will also learn about basic program construct and simple data structures. In addition, the course will include topics to appreciate the internal operations of a processor.",,"datum, algorithm, structure, data structure","Course is taught in Python and then C after recess week. 3/5 for easiness as I only had some Python experience. C was foreign but I got used to it quickly. It should be very simple for those who have experience in poly or wherever. There are pre-recorded LAMs for each week, and then a lecture which summarises the LAMs and some extra content. The LAMs are just the prof reading off the slides so referring to slides should be enough. Attending the lecture might be useful as some stuff they cover are not in the LAMs but could appear in the exams. There are weekly tutorials which are a mix of conceptual and coding problems. The TAs will go through in class. We got to play around with RPi sensehat in Python labs, while C labs are just extra coding questions. Assessment format are LAMs MCQs, labs and a MCQ exam for Python, an assignment, MCQ and coding exam for C. For C, the exam, assignment, tutorials are done on a propietary IDE so it’s good to get used to the website. The assignment spans a few weeks but can be completed in days or even hours if you’re experienced. Finish it when the question is released to get it out of the way before the weeks leading to finals.first half teaches python, lams, lectures and lab lessons are relatively easier to follow and understand. second half teaches C programming, which was much more difficult in my opinion.Relatively easy if you have coding experience.
First half teaches python and the mid term is mcq. Second half teaches C which is a bit harder and there are assignments and a lab test at the end.
The lectures and the LAMS videos aren’t the best though so might be hard for some to follow.",0.9592
CZ1107,DATA STRUCTURES & ALGORITHMS,"This course aims to (i) teach the concepts, implementations and applications of data structures such as arrays, linked lists, stacks, queues and trees that are important for building efficient algorithms; (ii) provide an introduction to algorithm analysis and design. These are essential for future computer science and computer engineering courses.",CE1103 OR  CZ1103 OR  CE1003 OR  CZ1003,"structure, algorithm, data structure","I took this module AY20-21 Sem 2! This is one of the most intense module you would be taking in your first year at SCSE! The first half is honestly quite easy, and make sure you can score as much as possible in this part! The second part (Algorithms) is a nightmare, executing algorithms in C is quite difficult when compared to other programming languages like JAVA! The core focus comes down to one thing: how well you can code in C. The lectures/labs do not help as well! The assignment questions/lab test questions for this part of the course were at a different level when compared to lab exercises! Also, I do not expect such a rigorous course on algorithms (with an extremely difficult lab test) is quite unsuitable for a year 1 student who has just started grasping programming skills. It would have been more fair, if lab test questions were set based on the premise that the students were still in Year 1! Overall, the professors/lecturers are pretty good, notes are good as well but the assessments were a pain in the ass. You should be able to get atleast a B+ (Thats what I got) with average effort! Not an easy mod to score A+!This is one of the most challenging year 1 mods but if your grasp of C is strong and you enjoy solving problems, you will really enjoy this mod. Dr Loke is strict about plagiarism so as long as you write your own code, it’s not that hard to score really well (A/A+). The lecture notes are good and there is a lot of reference material available onlineQuite difficult for me. If your C is bad, you will struggle badly. Try not to lag behind content because it will be damn difficult to catch up.
The lecturers aren’t the best so might be beneficial to watch youtube lectures instead. The assignments and lab test from the first half are manageable but the difficulty of the second half is quite intense and the prof is more strict about plagiarism and stuff.",0.8563
MH1805,CALCULUS,"This course aims to equip you with the subject knowledge, logical reasoning and analytical skills so that you are able to apply the concepts and techniques of calculus of one variable to solve problems encountered in science.",,calculus,"Concepts are abstract and quite difficult to grasp initially, but the prof and TAs are very helpful and responsive to queries. No lectures but a series of youtube videos to watch every week which is sometimes very time consuming and tedious.
No finals when I took it but was replaced with group work on jupyter notebook. There are also midterm and final tests. First test was relatively easy but second test was much harder.",0.7301
MH1812,DISCRETE MATHEMATICS,"This course serves as an introduction to various topics in discrete mathematics. Familiarity with formal analysis through simple problems in some basic discrete structures is a key objective rather than knowing these structures in depth. Specifically, the main aim is to learn topics from the following broad areas of discrete mathematics: number theory, logic, combinatorics, and graph theory. This course aims to provide students with a solid mathematical foundation and is intended for first year computer science and computer engineering students.",,structure,"Concepts are relatively straightforward to understand, but need to be consistent with doing tutorials and clarifying doubts. LAMS videos are quite bad, but the lectures are slightly better. Depends on the semester you take this mod, but the sem I took it the finals were not doable at all.",-0.6787
MH2500,PROBABILITY & INTRODUCTION TO STATISTICS,"This is a core mathematical course, aiming to develop your understanding of fundamental concepts in probability and statistics such as random variables, independence, basic probability distributions, and confidence intervals. The course also prepares you for further statistics courses such as MH3500 in the Statistics Track.",MH1100 & MH1101 OR  MH1800 & MH1801 OR  MH1101 & MH110S OR  MH1100 & MH111S OR  MH1802 OR  CY1601 OR  MH1805,"probability, statistics, probability distribution, confidence interval","I would not have taken this module if I had the choice. Unfortunately, it was a core module for me, and I am not even a Math major. I took this during AY2020/21, so the assessment was thankfully not based on class participation at all. The module was a lot of pain and suffering, and half the time my group of friends did not know what was going on. One of the redeeming parts of this module were that for the 2 tests, the first 2 questions were easy, and only the last question was hard, so as long as you studied the basics and understood them, you could at least get a guaranteed 70/100 for those tests. I was also fortunate that the professor decided to set an easier paper for finals during my year, because most of the questions actually seemed doable unlike past year papers. Be prepared for a lot of practice and time spent trying to understand the concepts if you’re not good at Math. There is also some sort of a language barrier with the professor, and maybe even with the TAs, but as long as you don’t get my TA (who didn’t even wear a mask or face shield when teaching during tutorials…), maybe you can at least try to ask your tutor or the professor for extra consultations.Year Taken: AY 17/18, Sem 1
Grade: S Mid term 1 (20%)
Mid term 2 (25%)
Class participation(5%)
Final (50%) Uh…this is actually a year 2 math core, I took it because the prerequisites were MH1800 and MH1801, and since I did well for those 2 I thought this would be simple too. In the end I did really badly for the tests hais. I thought it wouldn’t be that hard since the first 3 weeks were about binomial, poisson and normal distribution which were taught in JC. I read reviews for this modules and they didn’t say it is so hard! Or is it because I’m not a math student haha, luckily can SU or I will die. Yes yes it’s great that I passed~ The textbook is available online too. For the first mid term, 1 single-sided A4 cheat sheet can be brought to the exam, and 1 double-sided A4 cheat sheet for the second mid term. For the final, 2 double-sided A4 cheat sheet can be brought. I don’t know how to do well for this so go read other reviews instead~ Okay end of year 2 review, HAPPY NEW YEAR!! I added some links for the textbooks at the side bar but I think it is only visible on web view. This review was reposted with the kind permission of Hairdryer. Originally published at https://ionhairdryer.blogspot.com/2018/01/ay1718-ntu-spms-cbc-y2s1.html",0.9508
MH2802,LINEAR ALGEBRA FOR SCIENTISTS,"This course aims to support you in acquiring a wider range of mathematical concepts related to vector spaces and linear algebra, while also developing a strong set of mathematical skills for upper-level Physical and Computing Science courses. Through a mathematical approach to problem-solving, you will have the opportunity to develop thinking, reasoning, communication, and modelling skills. Additionally, the course aims to help you connect ideas within mathematics and apply mathematical principles in the context of Physical and Computing Science courses. Ultimately, this course seeks to provide an experience that fosters an appreciation for the rigour and abstraction in the discipline.",H2 Maths or equivalent,"vector, vector space, linear algebra",,0.0
SC1003,INTRODUCTION TO COMPUTATIONAL THINKING & PROGRAMMING,"Computational thinking (CT) is the process of analysing a problem then designing and expressing its solution in such a way that a computer can effectively carry it out. It includes a number of characteristics, such as breaking a problem into small and repetitive ordered steps, logically ordering and analyzing data and creating solutions that can be effectively implemented as programs running on computer. The aim of this course is hence to take students with no prior experience of thinking in a computational manner to a point where you can derive simple algorithms and code the programs to solve some basic problems in your domain of studies. Student will also learn about basic program construct and simple data structures. In addition, the course will include topics to appreciate the internal operations of a processor.",,"datum, algorithm, structure, data structure","Course is taught in Python and then C after recess week. 3/5 for easiness as I only had some Python experience. C was foreign but I got used to it quickly. It should be very simple for those who have experience in poly or wherever. There are pre-recorded LAMs for each week, and then a lecture which summarises the LAMs and some extra content. The LAMs are just the prof reading off the slides so referring to slides should be enough. Attending the lecture might be useful as some stuff they cover are not in the LAMs but could appear in the exams. There are weekly tutorials which are a mix of conceptual and coding problems. The TAs will go through in class. We got to play around with RPi sensehat in Python labs, while C labs are just extra coding questions. Assessment format are LAMs MCQs, labs and a MCQ exam for Python, an assignment, MCQ and coding exam for C. For C, the exam, assignment, tutorials are done on a propietary IDE so it’s good to get used to the website. Workload is pretty manageable as it is one tutorial and one lab per week pretty much. The C assignment is given nearer to finals but can be completed in 2-3 days or even hours if you’re experienced. Finish it when the question is released to get it out of the way before the weeks leading to finals.",0.9588
SC1007,DATA STRUCTURES & ALGORITHMS,"This course aims to (i) teach the concepts, implementations and applications of data structures such as arrays, linked lists, stacks, queues and trees that are important for building efficient algorithms; (ii) provide an introduction to algorithm analysis and design. These are essential for future computer science and computer engineering courses.",SC1003,"structure, algorithm, data structure","Took this module in 21/22 Sem 2. Components: 8 x 5% take-home assignments, 2 x 20% programming tests, 20% MCQ First half was taught by Dr Loke YR. No pre-recorded lectures, all done live on his Youtube channel. Content covered were: time and space complexity, linked lists, stacks/queues, trees + binary search trees, self balancing tree (AVL) and Huffman. Explanation can be a little hard to get sometimes. Second half was taught by Dr Anh Tuan. Live lectures as well, no pre-recorded. Content covered were: hashing, graphs, BFS/DFS, backtracking, DP. Incredibly thick accent, although it was managable for me. Weekly Labs: Weekly problem sets to be done in the labs. Not graded though, merely for practice. Take-home assignments: Dr Loke sets significantly harder assignment questions than Dr Anh, around leetcode med/hard for most questions. For Dr Anh, assignment questions are similar to lab ones, with 1 other question being harder. Don’t be afraid to seek help from your batchmates/friends if you’re struggling with the problem sets. Many people are struggling as well, helping each other goes a long way. 🙂 Do try to score the full 40% for the assignments as it is a free significant chunk of the module. Although, Dr Loke says that some people find his assignment so difficult that they submitted nothing at all. 🙁 Programming tests: 2hr for both tests. 4 questions for 1st half, 3 questions + the MCQ for 2nd half. As usual, Dr Loke’s questions are significantly harder. Some personal exam tips are: partition your time wisely. Spend strictly 30min for each question, and move on after 30min if you cannot finish. Chances are, subsequent questions can be easier and you can finish in <30min, then you can go back and attempt the harder questions. Do use the draft paper provided to write out your pseudocode/logic before typing a single line of code. Lastly, if you're truly unable to solve the questions, try to code out some simple base cases instead of giving up. There could be some base cases in the test cases, which can give you some partial credit. My test questions for reference:
First half:
-Removing current node if prev value + next value = current value in a doubly linked list.
-Zipping up two linked lists
-Finding minimum path in a binary tree
-Printing out the nodes of a ternary tree in a specific order, left to right then right to left and so on (Very difficult) First half:
-DP problem for a given equation, similar to Fibonacci
-Output the total number of solutions for graph coloring problem given a certain starting color
-Output the total number of subgraphs for a given graph using BFS MCQ: 10 questions, theory based. Important to know your Big-O notation, time comp of various algorithms like BFS/DFS, simple hashing functions, DP concepts. Overall: Make sure your C fundamentals are solid, especially for pointers. Make use of resources like leetcode, youtube, g4g.Assessment components:
8 hackerearth assignments – 40% (8×5%)
2 lab tests – 40%
final quiz – 20% Programming language used: C prog Lecturers: Dr Loke (first half) and Prof Luu Anh Tuan (sec half) Weekly Hours: 2x1hr online lecture, 1x2hr lab, 1x1hr tutorial Topics covered:
– Linked List
– Stack & Queue
– Trees
– AVL, Huffman
– Time complexity
– Hash Table
– BFS, DFS
– Backtracking
– DP
– Bipartite Graph First half:
Covered by Dr Loke via his youtube live stream. The assignments set by Dr Loke were very difficult and took up a lot of time to solve given that it was only 5% worth. Lab test for his half can be prepared by practising leetcode. Heard many people struggle to even finish assignments and end up not finishing. Lab test was also quite hard — considerably lesser number of people left lab before end of session (<5 for mine). Sec half:
Covered by Prof Anh Tuan. His lab test and assignments were much easier compared to Dr Loke, though he is not as good as Dr Loke at explaining and kind of hard to get his accent sometimes. Assignments were closely related with lab practice questions so not much effort were required as 80% can be copied-pasted and add a few more lines. Lab test was also related and much easier than 1st half — about half the lab left before end of exam. Expected grade:
assignments (~38/40%)
lab test 1 (11.5/20%)
lab test 2 (14/20%)
quiz grade unknown
expecting B+ or if bell curve god helps, A-",0.9751
CS4022,SOCIAL MEDIA MINING,This course covers how to analyse unstructured data such as social media content using text mining techniques. Students will learn various text mining techniques and tools both through lectures and hands-on exercises in labs. The course will also explore various usages of text mining techniques to real world applications.,CS2405 OR  CZ4032 (Applicable to DSAI),datum,,0.0
CZ2002,OBJECT ORIENTED DESIGN & PROGRAMMING,"The object-oriented paradigm to the design of software is one major successful approach to address complexity and maintainability issues in software systems. We want students to establish an object-oriented mindset and to gain valuable insights into how software can be developed using the object-oriented approach. This course should not be interpreted to be a pure programming language course. Rather, the programming language serves to illustrate, via practical examples, the concepts learnt in the course. As a student of this course, you will learn essential object-oriented concepts such as encapsulation, the separation of design from implementation, the use of inheritance and polymorphism. Finally, you will also learn good design principles for reuse, and to realise these principles using object-oriented programming languages such as Java and/or C++.",CZ1007 OR  CE1007 OR  CE1103 OR  CZ1103 OR  CZ1107,"programming, java","Poorly designed module, no idea why c++ is needed. The project should be released earlier rather than during recess week. Nevertheless, only Dr. Li Fang teaches well while the others aren’t so good.Its a fun mod if you watch all the lectures on time and start the group project early. The group project hasn’t changed in years so its not hard to find previous projects online and get inspiration. Even the final exam is very standard. The profs are actually pretty knowledgable and encourage questions",0.9316
CZ2004,HUMAN COMPUTER INTERACTION,Introduction; Usability and application spaces; Guidelines and principles for text-based interactions; Hardware devices for interaction; Development processes and assessments; Software tools in user interface development; Interaction styles; Practical UI development concepts; Design Issues,,,,0.0
CZ2006,SOFTWARE ENGINEERING,Introduction to Software Engineering; Software Engineering Process; Introduction to Requirements; Introduction to Software Specifications; Software Design and Construction; Testing and Integration; Software Maintenance; Software Project Management; Software Quality; Dependability and Security,CZ2002(Corequisite) OR  CE2002(Corequisite),,A very hands-on mod. 50% of your grade is the lab project which requires bi-weekly deliverables and self-learning since you have to make an app (mobile or web). The actual content is slightly boring but gets fun at times. Just need to watch the lectures (on 2x) to score well on the final/quizzes. Not very content heavy.,0.7647
CZ2007,INTRODUCTION TO DATABASES,Overview of Database Management Systems (DBMS); Entity-Relationship Data Model; Relational Data Model; Functional Dependencies (FD) and Normalization; Relational Algebra; Structured Query Language (SQL); Storage of Relational Data; Indexing Techniques; Query Processing and Optimization; Transaction Management and Concurrency Control,CZ1007 & CZ2001(Corequisite) OR  CE1007 & CE2001(Corequisite) OR  CE1007 & CZ2001(Corequisite) OR  CE2001(Corequisite) & CZ1007 OR  CE2101(Corequisite) OR  CZ2101(Corequisite),model,,0.0
CZ2101,ALGORITHM DESIGN & ANALYSIS,"This course aims to develop your knowledge, understanding and skills about algorithm design and analysis. Upon the successful completion of this course, students shall be able to (i) apply additional analysis techniques in complexity analysis of recursive algorithms; (ii) apply, design and analyse algorithms using a number of approaches to solve various problems like sorting, shortest-path, minimum spanning tree, optimal sequencing for matrix multiplication, the longest common subsequence, string matching. Students will also learn the concepts of complexity classes P & NP and apply greedy heuristic approach to solve NP-complete problems.",CZ1107 & MH1812,"algorithm, matrix","Very enjoyable module with fun and interesting topics (if you’re interested in algorithms and computer science theory). The lecturer for second half (Dr. Shell) is really nice and explains the concepts really well. This module is slightly harder and requires a strong grasp over concepts so I would recommend going over and beyond (reading the reference textbook, solving additional questions) if you want an A+. Most of your grade is decided by your final (60%) so possible to grind at the end but its better to study throughout.",0.947
CZ3005,ARTIFICIAL INTELLIGENCE,"Computer / software engineers are involved in effective and efficient building of knowledge agent systems that satisfy the requirements of users; possibly software for intelligent embedded and intelligent information systems. General awareness of theory, knowledge, and practice in all phases of the knowledge based systems and representation techniques for problem solving are necessary for those of you who wants to get into the field artificial intelligence. These are advanced intelligent systems that are finding widespread applications in finance, banking, manufacturing industries.",CZ1003 & CZ2001 OR  CE1003 & CE2001 OR  CE1003 & CZ2001 OR  CZ1107 & CZ1115 OR  CE1107 & CE1115 OR  CZ1103 & CZ2101,artificial intelligence,,0.0
MH2100,CALCULUS III,"Calculus III is a core Mathematics course that extends concepts and techniques developed in Calculus I and Calculus II to the case of functions of several real variables. In other words, we try to do the same things as in Calculus I and II, but in higher dimensions. In this course, we shall discuss the notions of limits, continuity, derivatives and integrals of real-valued and vector-valued functions of many variables. Most of the time, extending these familiar notions from one to several variables requires some degree of ingenuity, and we are going to have to spice up the material from Calculus I and II with a little bit of geometry and linear algebra. Techniques learned in Calculus III are essential for financial analysts, engineers, and for further study in mathematics.","MH1101 OR  MH1802 (Applicable to DSAI) OR  MH1805 (Applicable to ECDS ,DSAI)","calculus, vector, linear algebra",,0.0
SC2001,ALGORITHM DESIGN & ANALYSIS,"This course aims to develop your knowledge, understanding and skills about algorithm design and analysis. Upon the successful completion of this course, students shall be able to (i) apply additional analysis techniques in complexity analysis of recursive algorithms; (ii) apply, design and analyse algorithms using a number of approaches to solve various problems like sorting, shortest-path, minimum spanning tree, optimal sequencing for matrix multiplication, the longest common subsequence, string matching. Students will also learn the concepts of complexity classes P & NP and apply greedy heuristic approach to solve NP-complete problems.",MH1812 & SC1007,"algorithm, matrix",,0.0
SC2002,OBJECT ORIENTED DESIGN & PROGRAMMING,"The object-oriented paradigm to the design of software is one major successful approach to address complexity and maintainability issues in software systems. We want students to establish an object-oriented mindset and to gain valuable insights into how software can be developed using the object-oriented approach. This course should not be interpreted to be a pure programming language course. Rather, the programming language serves to illustrate, via practical examples, the concepts learnt in the course. As a student of this course, you will learn essential object-oriented concepts such as encapsulation, the separation of design from implementation, the use of inheritance and polymorphism. Finally, you will also learn good design principles for reuse, and to realise these principles using object-oriented programming languages such as Java and/or C++.",SC1003 OR  SC1007,"programming, java",,0.0
SC2006,SOFTWARE ENGINEERING,Introduction to Software Engineering; Software Engineering Process; Introduction to Requirements; Introduction to Software Specifications; Software Design and Construction; Testing and Integration; Software Maintenance; Software Project Management; Software Quality; Dependability and Security,SC2002(Corequisite),,,0.0
SC2207,INTRODUCTION TO DATABASES,Overview of Database Management Systems (DBMS); Entity-Relationship Data Model; Relational Data Model; Functional Dependencies (FD) and Normalization; Relational Algebra; Structured Query Language (SQL); Storage of Relational Data; Indexing Techniques; Query Processing and Optimization; Transaction Management and Concurrency Control,SC2001(Corequisite) OR  MH1403,model,,0.0
SC3000,ARTIFICIAL INTELLIGENCE,"Computer / software engineers are involved in effective and efficient building of knowledge agent systems that satisfy the requirements of users; possibly software for intelligent embedded and intelligent information systems. General awareness of theory, knowledge, and practice in all phases of the knowledge based systems and representation techniques for problem solving are necessary for those of you who wants to get into the field artificial intelligence. These are advanced intelligent systems that are finding widespread applications in finance, banking, manufacturing industries.",SC1007 & SC1015 & SC2000 OR  MH2500 & SC1007 & SC1015,artificial intelligence,,0.0
CZ4010,APPLIED CRYPTOGRAPHY,"Summary: Cryptography is the foundational building block of Cybersecurity and Privacy. While the field of classical cryptography dealt with security and privacy of data in transit, the modern take on the subject has generalized the scope of its applications to ensuring security and privacy of all forms of digital communication, computation, automation, interaction, transaction and preservation. Thus, it is important to understand the technical aspects of cryptography to appreciate its applications in cybersecurity. The Aim: This cryptography course in Computer Science and Engineering aims to develop your ability to understand how cryptographic algorithms work, to identify the problems associated with the application of cryptography in real-world scenarios, and explain the operation of various cryptographic mechanisms. This course will equip you to know deeply the fundamentals of symmetric key ciphers, hash functions and public key ciphers, enabling you to understand and develop secure cryptography solutions in real life cryptography. It will also introduce you to popular cryptographic libraries and APIs for hands-on implementation of security mechanisms, and some prominent cryptographic standards, guidelines and frameworks from the industry and government bodies.",CZ1011 OR  CZ2100 OR  MH2500 (Applicable to DSAI),"datum, digital, algorithm",,0.0
CZ4031,DATABASE SYSTEM PRINCIPLES,"Database management systems (DBMS) are designed to manage large and complex data sets. The fundamentals of the implementation of database management systems must be understood by all Computer Science students. This will help students to develop and design software systems utilizing databases, and equip students with the knowledge of managing data of large scale. Moreover, this should be understood by current and future business leaders so that they can offer strategic guidance based on an informed understanding of database business capabilities. This course provides the basis for achieving this goal.",CZ2001 & CZ2007 OR  BC2402 OR  CZ2007 & CZ2101,datum,bad,-0.5423
CZ4032,DATA ANALYTICS & MINING,Module Description unavailable. Please google for more info :),CZ2001 OR  CZ2101,,"the worst teaching quality I have ever met. The prof keeps saying er er er in the lecture. Very tight timelines for the project, at the same time you have to prepare your exam.",-0.6249
CZ4041,MACHINE LEARNING,This course introduces basic concepts and methodologies for machine learning as well as their applications. Clustering. Dimension Reduction. Classification. Decision Theory. Density Estimation. Classifier Evaluation.,CZ1007 & CZ1011 OR  CZ1107 & CZ2100 OR  CZ1007 & MH2500 OR  CZ1107 & MH2500,"classification, machine learning, dimension reduction",,0.0
CZ4042,NEURAL NETWORK & DEEP LEARNING,"This course aims to provide you with a basic but comprehensive foundation of neural networks and deep learning, including underlying principles, architectures, and learning algorithms of various types of deep neural networks that are essential for future applications of artificial intelligence and data science.",CZ1007 & CZ1011 & CZ1012 OR  CZ1104 & CZ1107 OR  CZ1007 & MH2802 OR  CZ1107 & MH2802,"algorithm, datum, neural network, deep learning, artificial intelligence",,0.0
CZ4045,NATURAL LANGUAGE PROCESSING,"This course introduces natural language processing at a basic level. 1. Basic concepts of syntax, semantics, and grammar formalisms 2. Basic techniques of language modelling, part-of-speech tagging, parsing, and semantic analysis 3. Well-known applications of natural language processing, such as machine translation and information extraction, and their evaluations",CZ2001 OR  CZ2101,,,0.0
CZ4124,DATA VISUALISATION,"The data visualisation course aims to provide computer science-oriented students with the principles and practice to design and present effective data visualisation solutions for different datasets and visualisation objectives. The course focuses on applying design considerations which take into account the human's visual and psychological characteristics, with the goal of designing effective and ethical visuals. The course also introduces students to the large variety of techniques and tools for visualising, exploring and interacting with both abstract and scientific data.",CZ1103 & MH2500 OR  CZ1103 & CZ2100 OR  CZ1003 & MH2500 OR  CZ1003 & CZ2100,datum,,0.0
CZ4125,DEVELOPING DATA PRODUCTS,"Data products are products whose principal thrust is to use data to facilitate certain end goals. These products may exhibit varied levels of complexity, spanning from being raw and derived data, intelligence and services derived from or driven by data, enabled by algorithmic and statistical tools such as machine learning. In many data products, the role of data can be subtle and the overall product may be composed of other modules, which could be more prominent in appearance. The scope of this course is confined to the exploration of the life-cycle of typical data products that deploy data-science dominantly or exclusively. We will deconstruct individual components across the full stack: ranging from data acquisition, wrangling and storage, testing, validation, and refinement - spanning exploratory analysis, issues of visualization and presentation, and application of machine learning techniques for decision support, anomaly detection and recommendation systems. We will explore this course with hands-on examples, illustrating how some data products utilize only a subset of these components, while others deploy the wider gamut. This course will also expose techniques to handle various kinds of data on their own and in conjunction, e.g., natural language data, datetime and timeseries, geoseries and graph data; the underlying systems and algorithms to support, analyze and learn using such data to build data products. Overall, in this course, we will describe several fundamental principles, and we will illustrate them in action using hands-on examples and tools. The choice of algorithms and software packages will be representative but not exhaustive. As such, the detailed description of course content uses 'e.g.,' to give possible indicative instances, but the actual delivery of the course may choose other tools, programming languages, frameworks and examples (including or excluding the indicative instances). Furthermore, the instantiation of tools and examples could vary over time, based on practical considerations, e.g., maturity and popularity of the tools among practitioners. The course will be delivered inter-mixing live lectures and hands-on exercises blended with some parts of the lectures offered in pre-recorded TEL format and curated reading materials.",CZ1115 & MH2500 OR  CE1115 & MH2500,"datum, algorithm, programming, machine learning, data science",,0.0
MH3510,REGRESSION ANALYSIS,"This course aims to develop your understanding/grasping of the regression models of summarizing the relationship among variables. Linear regression models are widely used today in business, administration, economics, engineering, and the social, health and biological sciences. You should learn the rigorous way to approach regression models and be able to build regression models for real data.",MH2500 & MH3500,"regression, model, datum, linear regression",,0.0
MH4511,SAMPLING & SURVEY,"1. Probability Sampling a Types of Probability Samples b Simple Random Sampling c Estimation of Population Mean, Proportion and Total d Sample Size Estimation e Systematic Sampling 2. Stratified Sampling a Theory of Stratified Sampling b Sampling Weights c Estimation of Population Mean, Proportion and Total d Allocating Observations to Strata e Sample Size Estimation f Defining Strata g Post-stratification 3. Ratio and Regression Estimations a Ratio Estimation b Regression Estimation c Selecting the Sample Size d Relative Efficiency of Estimators 4. Cluster Sampling a One-Stage and Two-Stage Cluster Samplings b Estimation of Population Mean, Proportion and Total c Selecting the Sample Size d Cluster Sampling with Probability Proportional to Size 5. Sampling with Unequal Probabilities a One-Stage Sampling with Replacement b Two-Stage Sampling with Replacement c Unequal-Probability Sampling without Replacement 6. Nonresponse a Effects of Ignoring Nonresponse b Call backs and Two-Phase Sampling c Weighting Methods for Nonresponse d Imputation",MH2500 & MH3500,"probability, mean, regression",,0.0
MH4513,SURVIVAL ANALYSIS,"The course will introduce statistical methods used to analysis time-to-event data. Time-to-event or failure time data, and associated covariate data can be collected under a variety of sampling schemes and very commonly involves right censoring. The distribution of a time-to-event variable is often characterized in terms of its survival or hazard function. The course will cover fundamentals in survival analysis, with emphasis on statistical principal, methods and real life applications. The course will also motivate students to work closely with data and make inference nonparametrically and/or parametrically in the fields of study.",MH2500 & MH3500 & MH3510,datum,,0.0
MH4518,SIMULATION TECHNIQUES IN FINANCE,"This course aims to equip you with standard and advanced simulation techniques and cover their applications in finance, including derivatives pricing and risk management. In this course, you will develop skills in modelling and simulating time series data, and based on which you will be able to devise solutions to quantitative finance problems.",MH2500 & MH3511,datum,,0.0
SC3020,DATABASE SYSTEM PRINCIPLES,"Database management systems (DBMS) are designed to manage large and complex data sets. The fundamentals of the implementation of database management systems must be understood by all Computer Science students. This will help students to develop and design software systems utilizing databases, and equip students with the knowledge of managing data of large scale. Moreover, this should be understood by current and future business leaders so that they can offer strategic guidance based on an informed understanding of database business capabilities. This course provides the basis for achieving this goal.",SC2207,datum,,0.0
SC4000,MACHINE LEARNING,This course introduces basic concepts and methodologies for machine learning as well as their applications. Clustering. Dimension Reduction. Classification. Decision Theory. Density Estimation. Classifier Evaluation.,SC1004 & SC1007 & SC2000,"classification, machine learning, dimension reduction",,0.0
SC4001,NEURAL NETWORK & DEEP LEARNING,"This course aims to provide you with a basic but comprehensive foundation of neural networks and deep learning, including underlying principles, architectures, and learning algorithms of various types of deep neural networks that are essential for future applications of artificial intelligence and data science.",SC1004 & SC1007 OR  MH2802 & SC1007,"algorithm, datum, neural network, deep learning, artificial intelligence",,0.0
SC4002,NATURAL LANGUAGE PROCESSING,"This course introduces natural language processing at a basic level. 1. Basic concepts of syntax, semantics, and grammar formalisms 2. Basic techniques of language modelling, part-of-speech tagging, parsing, and semantic analysis 3. Well-known applications of natural language processing, such as machine translation and information extraction, and their evaluations",SC2001 OR  MH1403,,,0.0
SC4010,APPLIED CRYPTOGRAPHY,"Summary: Cryptography is the foundational building block of Cybersecurity and Privacy. While the field of classical cryptography dealt with security and privacy of data in transit, the modern take on the subject has generalized the scope of its applications to ensuring security and privacy of all forms of digital communication, computation, automation, interaction, transaction and preservation. Thus, it is important to understand the technical aspects of cryptography to appreciate its applications in cybersecurity. The Aim: This cryptography course in Computer Science and Engineering aims to develop your ability to understand how cryptographic algorithms work, to identify the problems associated with the application of cryptography in real-world scenarios, and explain the operation of various cryptographic mechanisms. This course will equip you to know deeply the fundamentals of symmetric key ciphers, hash functions and public key ciphers, enabling you to understand and develop secure cryptography solutions in real life cryptography. It will also introduce you to popular cryptographic libraries and APIs for hands-on implementation of security mechanisms, and some prominent cryptographic standards, guidelines and frameworks from the industry and government bodies.",SC2000 OR  MH2500 (Applicable to DSAI),"datum, digital, algorithm",,0.0
SC4020,DATA ANALYTICS & MINING,Module Description unavailable. Please google for more info :),SC2001 OR  MH1403,,,0.0
SC4024,DATA VISUALISATION,"The data visualisation course aims to provide computer science-oriented students with the principles and practice to design and present effective data visualisation solutions for different datasets and visualisation objectives. The course focuses on applying design considerations which take into account the human's visual and psychological characteristics, with the goal of designing effective and ethical visuals. The course also introduces students to the large variety of techniques and tools for visualising, exploring and interacting with both abstract and scientific data.",MH2500 & SC1003 OR  SC1003 & SC2000 OR  BS1009 & MH2500 OR  MH2500 & PS0001 OR  CV1014 & MH2814 OR  EE1005 & EE2106 OR  EE1005 & EE4491 OR  MA1008 & MA4849,datum,,0.0
SC4025,DEVELOPING DATA PRODUCTS,"Data products are products whose principal thrust is to use data to facilitate certain end goals. These products may exhibit varied levels of complexity, spanning from being raw and derived data, intelligence and services derived from or driven by data, enabled by algorithmic and statistical tools such as machine learning. In many data products, the role of data can be subtle and the overall product may be composed of other modules, which could be more prominent in appearance. The scope of this course is confined to the exploration of the life-cycle of typical data products that deploy data-science dominantly or exclusively. We will deconstruct individual components across the full stack: ranging from data acquisition, wrangling and storage, testing, validation, and refinement - spanning exploratory analysis, issues of visualization and presentation, and application of machine learning techniques for decision support, anomaly detection and recommendation systems. We will explore this course with hands-on examples, illustrating how some data products utilize only a subset of these components, while others deploy the wider gamut. This course will also expose techniques to handle various kinds of data on their own and in conjunction, e.g., natural language data, datetime and timeseries, geoseries and graph data; the underlying systems and algorithms to support, analyze and learn using such data to build data products. Overall, in this course, we will describe several fundamental principles, and we will illustrate them in action using hands-on examples and tools. The choice of algorithms and software packages will be representative but not exhaustive. As such, the detailed description of course content uses 'e.g.,' to give possible indicative instances, but the actual delivery of the course may choose other tools, programming languages, frameworks and examples (including or excluding the indicative instances). Furthermore, the instantiation of tools and examples could vary over time, based on practical considerations, e.g., maturity and popularity of the tools among practitioners. The course will be delivered inter-mixing live lectures and hands-on exercises blended with some parts of the lectures offered in pre-recorded TEL format and curated reading materials.",MH2500 & SC1015,"datum, algorithm, programming, machine learning, data science",,0.0
SC4242,COMPILER TECHNIQUES,Module Description unavailable. Please google for more info :),SC2001 & SC2006,,,0.0
